services:
  rabbitmq1:
    image: rabbitmq:3.12-management
    hostname: rabbitmq1
    container_name: rabbitmq1
    networks:
      - rabbitmq_cluster
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"  # Prometheus metrics endpoint
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    command: sh -c "rabbitmq-plugins enable rabbitmq_prometheus && rabbitmq-server"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq2:
    image: rabbitmq:3.12-management
    hostname: rabbitmq2
    container_name: rabbitmq2
    networks:
      - rabbitmq_cluster
    ports:
      - "5673:5672"
      - "15673:15672"
      - "15693:15692"  # Prometheus metrics endpoint
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    command: /bin/bash -c "rabbitmq-plugins enable rabbitmq_prometheus; sleep 10; rabbitmq-server & sleep 20; rabbitmqctl stop_app; rabbitmqctl join_cluster rabbit@rabbitmq1; rabbitmqctl start_app; tail -f /dev/null"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq3:
    image: rabbitmq:3.12-management
    hostname: rabbitmq3
    container_name: rabbitmq3
    networks:
      - rabbitmq_cluster
    ports:
      - "5674:5672"
      - "15674:15672"
      - "15694:15692"  # Prometheus metrics endpoint
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    command: /bin/bash -c "rabbitmq-plugins enable rabbitmq_prometheus; sleep 10; rabbitmq-server & sleep 20; rabbitmqctl stop_app; rabbitmqctl join_cluster rabbit@rabbitmq1; rabbitmqctl start_app; tail -f /dev/null"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer
    networks:
      - rabbitmq_cluster
    depends_on:
      rabbitmq1:
        condition: service_healthy
      rabbitmq2:
        condition: service_healthy
      rabbitmq3:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_RABBITMQ_ADDRESSES: rabbitmq1:5672,rabbitmq2:5672,rabbitmq3:5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer
    networks:
      - rabbitmq_cluster
    depends_on:
      rabbitmq1:
        condition: service_healthy
      rabbitmq2:
        condition: service_healthy
      rabbitmq3:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_RABBITMQ_ADDRESSES: rabbitmq1:5672,rabbitmq2:5673,rabbitmq3:5674
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - rabbitmq_cluster
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - rabbitmq_cluster
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:

networks:
  rabbitmq_cluster:
    driver: bridge
